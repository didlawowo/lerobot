vars:
  PROJECT_DIR: "{{.ROOT_DIR}}"
  SRC_DIR: "{{.PROJECT_DIR}}/lerobot"
  TESTS_DIR: "{{.PROJECT_DIR}}/tests"
  EXAMPLES_DIR: "{{.PROJECT_DIR}}/examples"
  DATA_DIR: "{{.PROJECT_DIR}}/media"

tasks:
  default:
    desc: List all available tasks
    cmds:
    - task --list
    silent: true

  get-prerequisites-mac:
    desc: Install prerequisites on Mac
    cmds:
    - brew install python@3.10 task
    - pip install uv pipenv --break-system-packages

  shell:
    desc: Open a Python shell with project dependencies
    cmds:
    - pipenv shell "cd lerobot"

  prepare-instance:
    desc: Prepare an instance for the project
    cmds:
    - uv pip install -e ".[aloha, pusht]"

  install:
    desc: Install robot follow project dependencies
    cmds:
    - uv pip install -e ".[feetech]"

  wandb-login:
    desc: Login to wandb
    cmds:
    - wandb login

  run-example:
    desc: Run an example
    cmds:
    - python lerobot/scripts/visualize_dataset.py  --repo-id lerobot/pusht  --episode-index 0

  evaluate-policy:
  test-unit:
    desc: Evaluate a pretrained policy
    cmds:
    - python lerobot/scripts/eval.py  --policy.path=lerobot/diffusion_pusht  --env.type=pusht  --eval.batch_size=10  --eval.n_episodes=10  --policy.use_amp=false  --policy.device=cuda

  set-usb-motor-id:
    desc: Set motor ID
    args:
      ID:
        shorthand: i
        desc: Motor ID
      PORT:
        shorthand: p
        desc: USB port
        default: /dev/tty.usbmodem58760432961
    cmds:
    - python lerobot/scripts/configure_motor.py --port {{.PORT}} --brand feetech --model sts3215 --baudrate 1000000 --ID {{.ID}}

  test-motor:
    desc: Run motor tests
    cmds:
    - python -m unittest {{.TESTS_DIR}}/test_motor_model.py

  calibration:
    desc: Run calibration
    cmds:
    - python -m unittest {{.TESTS_DIR}}/test_display.py

  find-usb-port:
    desc: Find USB port
    cmds:
    - python lerobot/scripts/find_motors_bus_port.py

  teleoperate:
    desc: Teleoperate the robot
    cmds:
    - python lerobot/scripts/control_robot.py  --robot.type=so100  --robot.cameras='{}'  --control.type=teleoperate
